package Minilla::ModuleMaker::ModuleBuild;
use strict;
use warnings;
use utf8;
use Data::Section::Simple qw(get_data_section);

use Moo;

no Moo;

use Minilla::Util qw(spew_raw);

sub generate {
    my ($self, $project) = @_;

    my $content = get_data_section('Build.PL');
    $content =~ s!<%\s*\$([a-z_]+)\s*%>!
        $project->$1()
    !ge;
    spew_raw('Build.PL', $content);
}

sub prereqs {
    return +{
        configure => {
            requires => {
                'Module::Build'    => 0.38,
            }
        }
    }
}

1;
__DATA__

@@ Build.PL
use strict;
use Module::Build;
use File::Basename;
use File::Spec;

# =========================================================================
# THIS FILE IS AUTOMATICALLY GENERATED BY MINILLA.
# DO NOT EDIT DIRECTLY.
# =========================================================================

use 5.008;

my $builder = Module::Build->new(
    license              => 'perl',
    dynamic_config       => 0,

    configure_requires => {
        # Dummy deps for suppress Module::Build warnings.
        'Module::Build' => 0.38,
    },

    no_index    => { 'directory' => [ 'inc' ] },
    name        => '<% $dist_name %>',
    module_name => '<% $name %>',

    script_files => [glob('script/*'), glob('bin/*')],

    test_files           => ((-d '.git' || $ENV{RELEASE_TESTING}) && -d 'xt') ? 't/ xt/' : 't/',
    recursive_test_files => 1,
);
$builder->create_build_script();

print "Copying META.json to MYMETA.json\n";
copy 'META.json', 'MYMETA.json'
    or die $!;

print "Copying META.yml to MYMETA.yml\n";
copy 'META.yml', 'MYMETA.yml'
    or die $!;

